{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Redirect } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image, Spinner, Alert } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection'; //Variáveis do formulário\n\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: [],\n    email: [],\n    password: [],\n    passwordConfirmation: [],\n    bio: [],\n    avatar: []\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false,\n    bio: false,\n    avatar: false\n  }\n}; //Estado inicial do feedback do usuário\n\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: ''\n}; //Esquema para validações no validate.js\n\nconst schema = {\n  name: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      maximum: 150,\n      message: () => 'Este campo deve ter no máximo 150 caracteres'\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    email: {\n      message: () => 'Insira um email válido'\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      minimum: 8,\n      message: () => 'Este campo deve ter no mínimo 8 caracteres'\n    }\n  },\n  passwordConfirmation: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      minimum: 8,\n      message: () => 'Este campo deve ter no mínimo 8 caracteres'\n    },\n    equality: {\n      attribute: 'password',\n      message: 'As senhas não são iguais!',\n      comparator: (v1, v2) => v1 === v2\n    }\n  },\n  bio: {\n    length: {\n      maximum: 700,\n      message: () => 'Este campo deve ter no máximo 700 caracteres'\n    }\n  }\n};\n\nconst EditUserForm = () => {\n  _s();\n\n  //Observador\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      user.updatePassword(`${formState.values.password}`).catch(error => {\n        setFeedback({\n          open: true,\n          type: 'danger',\n          message: `${error.code}`\n        });\n      });\n      console.log('logado');\n    }\n  });\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState); //console.log(formState.values);\n\n  const queryUserByID = () => {\n    //Consultando usuário com ID passado na URL\n    if (formState.loading) {\n      firebase.database().ref('User').child(`${id}`).once('value', snapshot => {\n        setFormState(formState => ({ ...formState,\n          loading: false,\n          values: { ...formState.values,\n            name: snapshot.val().name,\n            //email: firebase.auth().currentUser.email,\n            bio: snapshot.val().bio ? snapshot.val().bio : '',\n            //password: firebase.auth().currentUser.password,\n            avatar: snapshot.val().avatar ? snapshot.val().avatar : ''\n          },\n          touched: { ...formState.touched,\n            name: true,\n            email: true,\n            password: true,\n            bio: snapshot.val().bio ? true : false,\n            avatar: snapshot.val().avatar ? true : false\n          }\n        }));\n      });\n    }\n  };\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n    console.log(formState.values);\n  });\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, {\n      fullMessages: false\n    });\n    setFormState(formState => ({ ...formState,\n      isValid: errors ? false : true,\n      errors: errors ? errors : {}\n    }));\n  }, [formState.values]);\n\n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({ ...formState,\n      values: { ...formState.values,\n        [field]: value\n      },\n      touched: { ...formState.touched,\n        [field]: true\n      }\n    });\n  };\n\n  const handleAvatarChange = e => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  };\n\n  const handleRedirect = () => {\n    if (formState.isValid) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 14\n      }, this);\n    } else setFeedback({ ...feedback,\n      open: false\n    });\n  };\n\n  const hasError = field => Boolean(formState.errors[field] && formState.touched[field]);\n\n  const handleSubmit = e => {\n    if (formState.isValid) {\n      // Atualizando campos no banco\n      firebase.database().ref('User').child(`${id}`).set({\n        name: formState.values.name,\n        bio: formState.touched.bio ? formState.values.bio : null,\n        avatar: formState.touched.avatar ? formState.values.avatar : null\n      });\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Edição realizada com sucesso.\"\n      });\n    } else {\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Edição não concluída.\"\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      padding: 10\n    },\n    children: formState.loading ? /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: 250\n      },\n      className: \"justify-content-center\",\n      float: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"warning\",\n        size: \"xs\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-dark text-white\",\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h4\",\n          children: \"Editar perfil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicAvatar\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              width: 100,\n              height: 100,\n              alt: \"171x180\",\n              src: \"https://elaele.com.br/img/anonimo.png\",\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Avatar Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"inputGroupFile01\",\n              label: fileName,\n              value: formState.values.avatar,\n              \"data-browse\": \"Insira uma imagem\",\n              onChange: e => handleAvatarChange(e),\n              custom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Formatos v\\xE1lidos: PNG, JPEG, JPG.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicBio\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Descri\\xE7\\xE3o do seu perfil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              type: \"text\",\n              isInvalid: hasError('bio') ? true : false,\n              placeholder: \"Descri\\xE7\\xE3o\",\n              value: formState.values.bio,\n              onChange: e => handleFieldChange(e, 'bio', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-danger\",\n              children: hasError('bio') ? formState.errors.bio[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('name') ? true : false,\n              type: \"text\",\n              placeholder: \"Nome Sobrenome\",\n              value: formState.values.name,\n              onChange: e => handleFieldChange(e, 'name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-danger\",\n              children: hasError('name') ? formState.errors.name[0] : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), feedback.open ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: feedback.type,\n            onClose: () => handleRedirect(),\n            dismissible: true,\n            children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n              children: feedback.type == 'success' ? 'Sucesso!' : 'Erro!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: feedback.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            variant: \"primary\",\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUserForm, \"TaZ+U1itEN+ZTkVjob+Nq4U+JHY=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = EditUserForm;\nexport default EditUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserForm\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js"],"names":["React","useState","useEffect","useRouteMatch","Redirect","Container","Row","Card","Form","Button","Image","Spinner","Alert","validate","firebase","initialFormState","isValid","loading","values","name","email","password","passwordConfirmation","bio","avatar","errors","touched","initialFeedback","open","message","type","schema","presence","allowEmpty","length","maximum","minimum","equality","attribute","comparator","v1","v2","EditUserForm","auth","onAuthStateChanged","user","updatePassword","formState","catch","error","setFeedback","code","console","log","routerMatch","id","params","fileName","setFileName","feedback","setFormState","queryUserByID","database","ref","child","once","snapshot","val","fullMessages","handleFieldChange","e","field","value","persist","handleAvatarChange","target","files","handleRedirect","hasError","Boolean","handleSubmit","set","preventDefault","padding","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useRouteMatch , Redirect} from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image, Spinner, Alert} from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection';\n\n\n//Variáveis do formulário\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: [],\n    email: [],\n    password: [],\n    passwordConfirmation: [],\n    bio: [],\n    avatar: []\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false,\n    bio: false,\n    avatar: false\n  }\n};\n\n//Estado inicial do feedback do usuário\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: '' \n};\n\n//Esquema para validações no validate.js\nconst schema = {\n  name: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { maximum: 150, message: () => 'Este campo deve ter no máximo 150 caracteres' }\n  },\n  email: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    email: { message: () => 'Insira um email válido' }\n  },\n  password: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' }\n  },\n  passwordConfirmation: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' },\n    equality: { attribute: 'password', message: 'As senhas não são iguais!', comparator: (v1, v2) => (v1 === v2) }\n  },\n  bio: {\n    length: { maximum: 700, message: () => 'Este campo deve ter no máximo 700 caracteres' }\n  }      \n};\n\n\n\nconst EditUserForm = () => {\n  \n  //Observador\n  firebase.auth().onAuthStateChanged((user) => {\n    if(user){\n      user.updatePassword(`${formState.values.password}`)\n      .catch((error) => {\n        setFeedback({\n          open: true,\n          type: 'danger',\n          message: `${error.code}`\n        });\n      })\n      console.log('logado');\n    }\n  });\n\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n\n\n\n  //console.log(formState.values);\n\n  const queryUserByID = () => {\n    //Consultando usuário com ID passado na URL\n    if(formState.loading) {\n      firebase.database().ref('User').child(`${id}`).once('value', (snapshot) => {\n        setFormState(formState => ({\n          ...formState,\n          loading: false,\n          values: {\n            ...formState.values,\n            name: snapshot.val().name,\n            //email: firebase.auth().currentUser.email,\n            bio: snapshot.val().bio ? snapshot.val().bio : '',\n            //password: firebase.auth().currentUser.password,\n            avatar: snapshot.val().avatar ? snapshot.val().avatar : '' \n          },\n          touched: {          \n            ...formState.touched,\n            name: true,\n            email: true,\n            password: true,\n            bio: snapshot.val().bio ? true : false,\n            avatar: snapshot.val().avatar ? true : false          \n          }\n        }));\n      })\n    } \n  }\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n    console.log(formState.values);\n  });  \n\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, { fullMessages: false });\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false: true,\n      errors: errors ? errors : {}\n    })) \n    \n  }, [formState.values]);\n  \n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      },\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });    \n  };\n\n  const handleAvatarChange = (e) => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  }\n\n  const handleRedirect = () => {\n    if(formState.isValid){\n      return <Redirect to=\"/\"/>\n    } else setFeedback({...feedback, open: false});\n  }\n\n  const hasError = (field) => Boolean(formState.errors[field] && formState.touched[field]);\n\n  const handleSubmit = (e) => {\n    if(formState.isValid){\n      // Atualizando campos no banco\n      firebase.database().ref('User').child(`${id}`).set({\n        name: formState.values.name,\n        bio: formState.touched.bio  ?  formState.values.bio : null,\n        avatar: formState.touched.avatar  ?  formState.values.avatar : null,\n      });\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Edição realizada com sucesso.\"\n      })\n    }else{\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Edição não concluída.\"\n      })\n    }    \n    e.preventDefault();\n  };\n\n  return (    \n    <Container style={{padding:10}}>\n      {\n        formState.loading ? \n        (<Row style={{marginTop:250}} className=\"justify-content-center\" float=\"center\">\n              <Spinner  animation=\"border\" variant=\"warning\" size=\"xs\" role=\"status\"/>\n          </Row>) : \n        (<Card>\n          <Card.Header  className=\"bg-dark text-white\" border=\"warning\" as=\"h4\">Editar</Card.Header>\n          \n          <Card.Body>\n            <Card.Title as=\"h4\">Editar perfil</Card.Title>\n            <br/>\n            <Form noValidate>\n              <Form.Group controlId=\"formBasicAvatar\">\n                <Image\n                  width={100}\n                  height={100}\n                  alt=\"171x180\"\n                  src=\"https://elaele.com.br/img/anonimo.png\"\n                  roundedCircle\n                />   \n                <br/><br/>\n                <Form.Label>Avatar Personalizado</Form.Label>\n                  <Form.File \n                    id=\"inputGroupFile01\"\n                    label={fileName}\n                    value={formState.values.avatar}\n                    data-browse=\"Insira uma imagem\"\n                    onChange={(e) => handleAvatarChange(e)}\n                    custom                \n                  />\n                  \n                  <Form.Text className=\"text-muted\">\n                    Formatos válidos: PNG, JPEG, JPG.\n                  </Form.Text>\n\n                  {/* Mensagem de erro, caso exista */}\n                  {/*<p className=\"text-danger\">{hasError('bio') ? formState.errors.bio[0] : null}</p>*/}\n              </Form.Group>   \n  \n              <Form.Group controlId=\"formBasicBio\">\n                <Form.Label>Descrição do seu perfil</Form.Label>\n                <Form.Control \n                  as=\"textarea\"\n                  type=\"text\"\n                  isInvalid={hasError('bio') ? true : false}\n                  placeholder=\"Descrição\" \n                  value={formState.values.bio}\n                  onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n                />                \n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-danger\">\n                  {hasError('bio') ? formState.errors.bio[0] : null}\n                </Form.Text>                  \n                \n              </Form.Group>\n              \n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Nome</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('name') ? true : false}\n                  type=\"text\" \n                  placeholder=\"Nome Sobrenome\"             \n                  value={formState.values.name}\n                  onChange={e => handleFieldChange(e, 'name', e.target.value)}\n              />\n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-danger\">\n                  {hasError('name') ? formState.errors.name[0] : null}\n                </Form.Text>\n                \n              </Form.Group>\n\n              {/* Botao Submit e feedback para o usuário utilizando o controleador \"feedback.open\"*/}\n              {feedback.open ? (\n                <Alert variant={feedback.type} onClose={() => handleRedirect()} dismissible>\n                  <Alert.Heading>{(feedback.type == 'success') ? ('Sucesso!') : ('Erro!')}</Alert.Heading>\n                  <p>{feedback.message}</p>\n\n                </Alert>\n              ) :\n                <Button type=\"submit\" onClick={(e) => handleSubmit(e)} variant=\"primary\">Atualizar</Button>\n              }\n            </Form>\n          </Card.Body>\n        </Card>)\n      }      \n    </Container>\n  );\n}\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}