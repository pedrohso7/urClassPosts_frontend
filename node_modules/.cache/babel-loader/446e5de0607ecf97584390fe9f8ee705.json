{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image, Spinner, Alert } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection'; //Variáveis do formulário\n\nconst initialFormState = {\n  isValid: false,\n  loading: false,\n  values: {\n    email: '',\n    password: ''\n  },\n  errors: {\n    email: [],\n    password: []\n  },\n  touched: {\n    email: false,\n    password: false\n  }\n}; //Estado inicial do feedback do usuário\n\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: ''\n}; //Esquema para validações no validate.js\n\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    }\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, {\n      fullMessages: false\n    });\n    setFormState(formState => ({ ...formState,\n      isValid: errors ? false : true,\n      errors: errors ? errors : {}\n    }));\n  }, [formState.values]);\n\n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({ ...formState,\n      values: { ...formState.values,\n        [field]: value\n      },\n      touched: { ...formState.touched,\n        [field]: true\n      }\n    });\n  };\n\n  const handleRedirect = () => {\n    if (formState.isValid) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }, this);\n    } else setFeedback({ ...feedback,\n      open: false\n    });\n  };\n\n  const hasError = field => Boolean(formState.errors[field] && formState.touched[field]);\n\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      alert('Usuario Logado com sucesso! \\n Email: ' + user.email);\n    }\n  });\n\n  const handleSubmit = e => {\n    if (formState.isValid) {\n      firebase.auth().signInWithEmailAndPassword(formState.values.email, formState.values.senha).catch(error => {\n        if (error.code === 'auth/wrong-password') {\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Senha incorreta!\"\n          });\n        } else if (error.code === 'auth/invalid-email') {\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Email inválido!\"\n          });\n        } else if (error) {\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: 'Erro: ' + error.code\n          });\n        } else {\n          firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n              alert('Usuario Logado com sucesso! \\n Email: ' + user.email);\n            }\n          });\n        }\n      });\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Logado com sucesso!\"\n      });\n    } else {\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Não foi possível entrar no sistema.\"\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      padding: 10\n    },\n    children: formState.loading ? /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: 250\n      },\n      className: \"justify-content-center\",\n      float: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"warning\",\n        size: \"xs\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"dark\",\n      text: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h4\",\n          children: \"Logar no sistema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('email') ? true : false,\n              type: \"email\",\n              placeholder: \"texto@exemplo.com\",\n              value: formState.values.email,\n              onChange: e => handleFieldChange(e, 'email', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              isInvalid: hasError('password') ? true : false,\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.password,\n              onChange: e => handleFieldChange(e, 'password', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), feedback.open ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: feedback.type,\n            onClose: () => handleRedirect(),\n            dismissible: true,\n            children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n              children: feedback.type == 'success' ? 'Sucesso!' : 'Erro!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: feedback.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"warning\",\n            onClick: e => handleSubmit(e),\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"+Qjs1R3g/8px5C7VNKBXRkSChP4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Login/index.js"],"names":["React","useState","useEffect","Redirect","Container","Row","Card","Form","Button","Image","Spinner","Alert","validate","firebase","initialFormState","isValid","loading","values","email","password","errors","touched","initialFeedback","open","message","type","schema","presence","allowEmpty","Login","feedback","setFeedback","formState","setFormState","fullMessages","handleFieldChange","e","field","value","persist","handleRedirect","hasError","Boolean","auth","onAuthStateChanged","user","alert","handleSubmit","signInWithEmailAndPassword","senha","catch","error","code","preventDefault","padding","marginTop","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Redirect} from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image, Spinner, Alert} from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection';\n\n\n//Variáveis do formulário\nconst initialFormState = {\n  isValid: false,\n  loading: false,\n  values: {\n    email: '',\n    password: ''\n  },\n  errors: {\n    email: [],\n    password: [],\n  },\n  touched: {\n    email: false,\n    password: false,\n  }\n};\n\n//Estado inicial do feedback do usuário\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: '' \n};\n\n//Esquema para validações no validate.js\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n  },\n  password: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n  }\n};\n\nconst Login = () => {\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, { fullMessages: false });\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false: true,\n      errors: errors ? errors : {}\n    })) \n    \n  }, [formState.values]);\n  \n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      },\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });    \n  };\n\n  const handleRedirect = () => {\n    if(formState.isValid){\n      return <Redirect to=\"/\"/>\n    } else setFeedback({...feedback, open: false});\n  }\n\n  const hasError = (field) => Boolean(formState.errors[field] && formState.touched[field]);\n\n\n  firebase.auth().onAuthStateChanged((user)=>{\n    if(user){\n      alert('Usuario Logado com sucesso! \\n Email: ' + user.email);\n    }\n  })\n  const handleSubmit = (e) => {\n    if(formState.isValid){\n      firebase.auth().signInWithEmailAndPassword(formState.values.email, formState.values.senha)\n      .catch((error) =>{\n        if(error.code === 'auth/wrong-password'){\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Senha incorreta!\"\n          })\n        }else if(error.code === 'auth/invalid-email'){\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: \"Email inválido!\"\n          })\n        }else if(error){\n          setFeedback({\n            open: true,\n            type: 'danger',\n            message: 'Erro: ' + error.code\n          })\n        }else{\n          firebase.auth().onAuthStateChanged((user)=>{\n            if(user){\n              alert('Usuario Logado com sucesso! \\n Email: ' + user.email);\n            }\n          })\n        }\n      })\n      \n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Logado com sucesso!\"\n      })\n    }else{\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Não foi possível entrar no sistema.\"\n      })\n    }    \n    \n    e.preventDefault();\n  };\n\n  return (    \n    <Container style={{padding:10}}>\n      {\n        formState.loading ? \n        (<Row style={{marginTop:250}} className=\"justify-content-center\" float=\"center\">\n              <Spinner  animation=\"border\" variant=\"warning\" size=\"xs\" role=\"status\"/>\n          </Row>) : \n        (<Card bg=\"dark\" text=\"white\">\n          <Card.Header  border=\"warning\" as=\"h4\">Login</Card.Header>\n          \n          <Card.Body>\n            <Card.Title as=\"h4\">Logar no sistema</Card.Title>\n            <br/>\n            <Form noValidate>\n  \n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('email') ? true : false}\n                  type=\"email\" \n                  placeholder=\"texto@exemplo.com\" \n                  value={formState.values.email}\n                  onChange={e => handleFieldChange(e, 'email', e.target.value)}\n                />\n              </Form.Group>\n\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Senha</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('password') ? true : false}\n                  type=\"password\" \n                  placeholder=\"Senha\" \n                  value={formState.values.password}\n                  onChange={e => handleFieldChange(e, 'password', e.target.value)}\n                />                \n              </Form.Group>\n\n              {/* Botao Submit e feedback para o usuário utilizando o controleador \"feedback.open\"*/}\n              {feedback.open ? (\n                <Alert variant={feedback.type} onClose={() => handleRedirect()} dismissible>\n                  <Alert.Heading>{(feedback.type == 'success') ? ('Sucesso!') : ('Erro!')}</Alert.Heading>\n                  <p>{feedback.message}</p>\n\n                </Alert>\n              ) :\n              <Button type=\"submit\" variant = \"warning\" onClick={(e) => handleSubmit(e)}>Entrar</Button>\n              }\n            </Form>\n          </Card.Body>\n        </Card>)\n      }      \n    </Container>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}