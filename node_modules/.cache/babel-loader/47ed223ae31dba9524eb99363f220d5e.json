{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Redirect } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Form, Button, Image, Spinner, Alert, Modal } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from 'firebase';\nimport { Feedback } from '../../Components/Feedback/index.js'; //Variáveis do formulário\n\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false,\n    bio: false,\n    avatar: false\n  }\n}; //Estado inicial do feedback do usuário\n\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: ''\n}; //Esquema para validações no validate.js\n\nconst schema = {\n  name: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      maximum: 150,\n      message: () => 'Este campo deve ter no máximo 150 caracteres'\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      minimum: 8,\n      message: () => 'Este campo deve ter no mínimo 8 caracteres'\n    }\n  },\n  passwordConfirmation: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      minimum: 8,\n      message: () => 'Este campo deve ter no mínimo 8 caracteres'\n    },\n    equality: {\n      attribute: 'password',\n      message: 'As senhas não são iguais!',\n      comparator: (v1, v2) => v1 === v2\n    }\n  },\n  bio: {\n    length: {\n      maximum: 700,\n      message: () => 'Este campo deve ter no máximo 700 caracteres'\n    }\n  }\n};\n\nconst EditUserForm = () => {\n  _s();\n\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState); //console.log(formState.values);\n\n  const queryUserByID = () => {\n    //Consultando usuário com ID passado na URL\n    if (formState.loading) return firebase.database().ref('Users').child(`${id}`).once('value', snapshot => {\n      setFormState(formState => ({ ...formState,\n        loading: false,\n        values: { ...formState.values,\n          name: snapshot.val().name,\n          email: snapshot.val().email,\n          bio: snapshot.val().bio ? snapshot.val().bio : '',\n          password: snapshot.val().password,\n          avatar: snapshot.val().avatar ? snapshot.val().avatar : ''\n        },\n        touched: { ...formState.touched,\n          name: true,\n          email: true,\n          password: true,\n          bio: snapshot.val().bio ? true : false,\n          avatar: snapshot.val().avatar ? true : false\n        }\n      }));\n    });\n  };\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n  });\n  useEffect(() => {\n    const errors = validate(formState.values, schema, {\n      fullMessages: false\n    });\n    setFormState(formState => ({ ...formState,\n      isValid: errors ? false : true,\n      errors: errors ? errors : {}\n    }));\n    console.log(formState.errors);\n    console.log(formState.isValid);\n  }, [formState.values]);\n\n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({ ...formState,\n      values: { ...formState.values,\n        [field]: value\n      },\n      touched: { ...formState.touched,\n        [field]: true\n      }\n    });\n  };\n\n  const handleAvatarChange = e => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  };\n\n  const handleFeedback = () => {\n    setFeedback({ ...feedback,\n      open: !feedback.open\n    });\n  };\n\n  const handleRedirect = () => {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }, this);\n  };\n\n  const handleSubmit = e => {\n    if (formState.isValid) {\n      firebase.database().ref('Users').child(`${id}`).set(formState.values);\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Sucesso! Edição realizada com sucesso.\"\n      });\n    } else {\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Erro! Edição não concluída.\"\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      padding: 10\n    },\n    children: formState.loading ? /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: 250\n      },\n      className: \"justify-content-center\",\n      float: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"warning\",\n        size: \"xs\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-dark text-white\",\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h4\",\n          children: \"Editar perfil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicAvatar\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              width: 100,\n              height: 100,\n              alt: \"171x180\",\n              src: \"https://elaele.com.br/img/anonimo.png\",\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Avatar Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"inputGroupFile01\",\n              label: fileName,\n              value: formState.values.avatar,\n              \"data-browse\": \"Insira uma imagem\",\n              onChange: e => handleAvatarChange(e),\n              custom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Formatos v\\xE1lidos: PNG, JPEG, JPG.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicBio\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Descri\\xE7\\xE3o do seu perfil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Descri\\xE7\\xE3o\",\n              value: formState.values.bio,\n              onChange: e => handleFieldChange(e, 'bio', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Nome Sobrenome\",\n              value: formState.values.name,\n              onChange: e => handleFieldChange(e, 'name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha Atual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.password,\n              onChange: e => handleFieldChange(e, 'password', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPasswordConfirmation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nova Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirme sua senha\",\n              value: formState.values.passwordConfirmation,\n              onChange: e => handleFieldChange(e, 'passwordConfirmation', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: handleSubmit,\n            variant: \"primary\",\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Feedback, {\n            feedback: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUserForm, \"TaZ+U1itEN+ZTkVjob+Nq4U+JHY=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = EditUserForm;\nexport default EditUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserForm\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js"],"names":["React","useState","useEffect","useRouteMatch","Redirect","Container","Row","Col","Card","Form","Button","Image","Spinner","Alert","Modal","validate","firebase","Feedback","initialFormState","isValid","loading","values","name","email","password","passwordConfirmation","bio","avatar","errors","touched","initialFeedback","open","message","type","schema","presence","allowEmpty","length","maximum","minimum","equality","attribute","comparator","v1","v2","EditUserForm","routerMatch","id","params","fileName","setFileName","feedback","setFeedback","formState","setFormState","queryUserByID","database","ref","child","once","snapshot","val","fullMessages","console","log","handleFieldChange","e","field","value","persist","handleAvatarChange","target","files","handleFeedback","handleRedirect","handleSubmit","set","preventDefault","padding","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,aAAT,EAAyBC,QAAzB,QAAwC,kBAAxC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyDC,OAAzD,EAAkEC,KAAlE,EAAyEC,KAAzE,QAAsF,iBAAtF;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAAQC,QAAR,QAAuB,oCAAvB,C,CAGA;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,KADc;AAEvBC,EAAAA,OAAO,EAAE,IAFc;AAGvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,KAAK,EAAE,EAFD;AAGNC,IAAAA,QAAQ,EAAE,EAHJ;AAINC,IAAAA,oBAAoB,EAAE,EAJhB;AAKNC,IAAAA,GAAG,EAAE,EALC;AAMNC,IAAAA,MAAM,EAAE;AANF,GAHe;AAWvBC,EAAAA,MAAM,EAAE;AACNN,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,KAAK,EAAE,EAFD;AAGNC,IAAAA,QAAQ,EAAE,EAHJ;AAINC,IAAAA,oBAAoB,EAAE,EAJhB;AAKNC,IAAAA,GAAG,EAAE,EALC;AAMNC,IAAAA,MAAM,EAAE;AANF,GAXe;AAmBvBE,EAAAA,OAAO,EAAE;AACPP,IAAAA,IAAI,EAAE,KADC;AAEPC,IAAAA,KAAK,EAAE,KAFA;AAGPC,IAAAA,QAAQ,EAAE,KAHH;AAIPC,IAAAA,oBAAoB,EAAE,KAJf;AAKPC,IAAAA,GAAG,EAAE,KALE;AAMPC,IAAAA,MAAM,EAAE;AAND;AAnBc,CAAzB,C,CA6BA;;AACA,MAAMG,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE,KADgB;AAEtBC,EAAAA,OAAO,EAAE,EAFa;AAGtBC,EAAAA,IAAI,EAAE;AAHgB,CAAxB,C,CAMA;;AACA,MAAMC,MAAM,GAAG;AACbZ,EAAAA,IAAI,EAAE;AACJa,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC,KADN;AAEJK,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE,GAAX;AAAgBN,MAAAA,OAAO,EAAE,MAAM;AAA/B;AAFJ,GADO;AAKbT,EAAAA,KAAK,EAAE;AACLY,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC;AADL,GALM;AAQbR,EAAAA,QAAQ,EAAE;AACRW,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC,KADF;AAERK,IAAAA,MAAM,EAAE;AAAEE,MAAAA,OAAO,EAAE,CAAX;AAAcP,MAAAA,OAAO,EAAE,MAAM;AAA7B;AAFA,GARG;AAYbP,EAAAA,oBAAoB,EAAE;AACpBU,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBJ,MAAAA,OAAO,EAAE,MAAM;AAApC,KADU;AAEpBK,IAAAA,MAAM,EAAE;AAAEE,MAAAA,OAAO,EAAE,CAAX;AAAcP,MAAAA,OAAO,EAAE,MAAM;AAA7B,KAFY;AAGpBQ,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,SAAS,EAAE,UAAb;AAAyBT,MAAAA,OAAO,EAAE,2BAAlC;AAA+DU,MAAAA,UAAU,EAAE,CAACC,EAAD,EAAKC,EAAL,KAAaD,EAAE,KAAKC;AAA/F;AAHU,GAZT;AAiBblB,EAAAA,GAAG,EAAE;AACHW,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE,GAAX;AAAgBN,MAAAA,OAAO,EAAE,MAAM;AAA/B;AADL;AAjBQ,CAAf;;AAsBA,MAAMa,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,WAAW,GAAG3C,aAAa,CAAC,gBAAD,CAAjC;AACA,QAAM4C,EAAE,GAAGD,WAAW,CAACE,MAAZ,CAAmBD,EAA9B;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BjD,QAAQ,CAAC,0BAAD,CAAxC;AACA,QAAM,CAACkD,QAAD,EAAWC,WAAX,IAA0BnD,QAAQ,CAAC6B,eAAD,CAAxC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BrD,QAAQ,CAACiB,gBAAD,CAA1C,CALyB,CASzB;;AAEA,QAAMqC,aAAa,GAAG,MAAM;AAC1B;AACA,QAAGF,SAAS,CAACjC,OAAb,EAAsB,OAEpBJ,QAAQ,CAACwC,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,KAAjC,CAAwC,GAAEX,EAAG,EAA7C,EAAgDY,IAAhD,CAAqD,OAArD,EAA+DC,QAAD,IAAc;AAC1EN,MAAAA,YAAY,CAACD,SAAS,KAAK,EACzB,GAAGA,SADsB;AAEzBjC,QAAAA,OAAO,EAAE,KAFgB;AAGzBC,QAAAA,MAAM,EAAE,EACN,GAAGgC,SAAS,CAAChC,MADP;AAENC,UAAAA,IAAI,EAAEsC,QAAQ,CAACC,GAAT,GAAevC,IAFf;AAGNC,UAAAA,KAAK,EAAEqC,QAAQ,CAACC,GAAT,GAAetC,KAHhB;AAING,UAAAA,GAAG,EAAEkC,QAAQ,CAACC,GAAT,GAAenC,GAAf,GAAqBkC,QAAQ,CAACC,GAAT,GAAenC,GAApC,GAA0C,EAJzC;AAKNF,UAAAA,QAAQ,EAAEoC,QAAQ,CAACC,GAAT,GAAerC,QALnB;AAMNG,UAAAA,MAAM,EAAEiC,QAAQ,CAACC,GAAT,GAAelC,MAAf,GAAwBiC,QAAQ,CAACC,GAAT,GAAelC,MAAvC,GAAgD;AANlD,SAHiB;AAWzBE,QAAAA,OAAO,EAAE,EACP,GAAGwB,SAAS,CAACxB,OADN;AAEPP,UAAAA,IAAI,EAAE,IAFC;AAGPC,UAAAA,KAAK,EAAE,IAHA;AAIPC,UAAAA,QAAQ,EAAE,IAJH;AAKPE,UAAAA,GAAG,EAAEkC,QAAQ,CAACC,GAAT,GAAenC,GAAf,GAAqB,IAArB,GAA4B,KAL1B;AAMPC,UAAAA,MAAM,EAAEiC,QAAQ,CAACC,GAAT,GAAelC,MAAf,GAAwB,IAAxB,GAA+B;AANhC;AAXgB,OAAL,CAAV,CAAZ;AAoBD,KArBD,CAFoB;AAyBvB,GA3BD;;AA6BAzB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAqD,IAAAA,aAAa;AACd,GAHQ,CAAT;AAKArD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,MAAM,GAAGb,QAAQ,CAACsC,SAAS,CAAChC,MAAX,EAAmBa,MAAnB,EAA2B;AAAE4B,MAAAA,YAAY,EAAE;AAAhB,KAA3B,CAAvB;AAEAR,IAAAA,YAAY,CAACD,SAAS,KAAK,EACzB,GAAGA,SADsB;AAEzBlC,MAAAA,OAAO,EAAES,MAAM,GAAG,KAAH,GAAU,IAFA;AAGzBA,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAH,GAAY;AAHD,KAAL,CAAV,CAAZ;AAMAmC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACzB,MAAtB;AACAmC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAAClC,OAAtB;AACD,GAXQ,EAWN,CAACkC,SAAS,CAAChC,MAAX,CAXM,CAAT;;AAaA,QAAM4C,iBAAiB,GAAG,CAACC,CAAD,EAAIC,KAAJ,EAAWC,KAAX,KAAqB;AAC7CF,IAAAA,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACG,OAAF,EAAb;AACAf,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXhC,MAAAA,MAAM,EAAE,EACN,GAAGgC,SAAS,CAAChC,MADP;AAEN,SAAC8C,KAAD,GAASC;AAFH,OAFG;AAMXvC,MAAAA,OAAO,EAAE,EACP,GAAGwB,SAAS,CAACxB,OADN;AAEP,SAACsC,KAAD,GAAS;AAFF;AANE,KAAD,CAAZ;AAWD,GAbD;;AAeA,QAAMG,kBAAkB,GAAIJ,CAAD,IAAO;AAChChB,IAAAA,WAAW,CAACgB,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBlD,IAAnB,CAAX;AACA2C,IAAAA,iBAAiB,CAACC,CAAD,EAAI,QAAJ,EAAcA,CAAC,CAACK,MAAF,CAASH,KAAvB,CAAjB;AACD,GAHD;;AAKA,QAAMK,cAAc,GAAG,MAAK;AAAErB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcpB,MAAAA,IAAI,EAAE,CAAEoB,QAAQ,CAACpB;AAA/B,KAAD,CAAX;AAAmD,GAAjF;;AAEA,QAAM2C,cAAc,GAAG,MAAM;AAAC,wBAAQ,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAR;AAA4B,GAA1D;;AAEA,QAAMC,YAAY,GAAIT,CAAD,IAAO;AAC1B,QAAGb,SAAS,CAAClC,OAAb,EAAqB;AACnBH,MAAAA,QAAQ,CAACwC,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,KAAjC,CAAwC,GAAEX,EAAG,EAA7C,EAAgD6B,GAAhD,CAAoDvB,SAAS,CAAChC,MAA9D;AACA+B,MAAAA,WAAW,CAAC;AACVrB,QAAAA,IAAI,EAAE,IADI;AAEVE,QAAAA,IAAI,EAAE,SAFI;AAGVD,QAAAA,OAAO,EAAE;AAHC,OAAD,CAAX;AAKD,KAPD,MAOK;AACHoB,MAAAA,WAAW,CAAC;AACVrB,QAAAA,IAAI,EAAE,IADI;AAEVE,QAAAA,IAAI,EAAE,QAFI;AAGVD,QAAAA,OAAO,EAAE;AAHC,OAAD,CAAX;AAKD;;AACDkC,IAAAA,CAAC,CAACW,cAAF;AACD,GAhBD;;AAkBA,sBAEE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAlB;AAAA,cAEIzB,SAAS,CAACjC,OAAV,gBACC,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAC2D,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAgE,MAAA,KAAK,EAAC,QAAtE;AAAA,6BACK,QAAC,OAAD;AAAU,QAAA,SAAS,EAAC,QAApB;AAA6B,QAAA,OAAO,EAAC,SAArC;AAA+C,QAAA,IAAI,EAAC,IAApD;AAAyD,QAAA,IAAI,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADD,gBAIC,QAAC,IAAD;AAAA,8BACC,QAAC,IAAD,CAAM,MAAN;AAAc,QAAA,SAAS,EAAC,oBAAxB;AAA6C,QAAA,MAAM,EAAC,SAApD;AAA8D,QAAA,EAAE,EAAC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,iBAAtB;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,KAAK,EAAE,GADT;AAEE,cAAA,MAAM,EAAE,GAFV;AAGE,cAAA,GAAG,EAAC,SAHN;AAIE,cAAA,GAAG,EAAC,uCAJN;AAKE,cAAA,aAAa;AALf;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA;AAAA;AAAA;AAAA,oBARF,eAQO;AAAA;AAAA;AAAA;AAAA,oBARP,eASE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUI,QAAC,IAAD,CAAM,IAAN;AACE,cAAA,EAAE,EAAC,kBADL;AAEE,cAAA,KAAK,EAAE9B,QAFT;AAGE,cAAA,KAAK,EAAEI,SAAS,CAAChC,MAAV,CAAiBM,MAH1B;AAIE,6BAAY,mBAJd;AAKE,cAAA,QAAQ,EAAGuC,CAAD,IAAOI,kBAAkB,CAACJ,CAAD,CALrC;AAME,cAAA,MAAM;AANR;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAmBI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAyBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,cAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,iBAFd;AAGE,cAAA,KAAK,EAAEb,SAAS,CAAChC,MAAV,CAAiBK,GAH1B;AAIE,cAAA,QAAQ,EAAEwC,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,KAAJ,EAAWA,CAAC,CAACK,MAAF,CAASH,KAApB;AAJlC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF,eAmCE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,eAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,gBAFd;AAGE,cAAA,KAAK,EAAEf,SAAS,CAAChC,MAAV,CAAiBC,IAH1B;AAIE,cAAA,QAAQ,EAAE4C,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,MAAJ,EAAYA,CAAC,CAACK,MAAF,CAASH,KAArB;AAJlC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCF,eA6CE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,mBAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,OAFd;AAGE,cAAA,KAAK,EAAEf,SAAS,CAAChC,MAAV,CAAiBG,QAH1B;AAIE,cAAA,QAAQ,EAAE0C,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,UAAJ,EAAgBA,CAAC,CAACK,MAAF,CAASH,KAAzB;AAJlC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CF,eAuDE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,+BAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,oBAFd;AAGE,cAAA,KAAK,EAAEf,SAAS,CAAChC,MAAV,CAAiBI,oBAH1B;AAIE,cAAA,QAAQ,EAAEyC,CAAC,IAAID,iBAAiB,CAACC,CAAD,EAAI,sBAAJ,EAA4BA,CAAC,CAACK,MAAF,CAASH,KAArC;AAJlC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvDF,eAiEE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAEO,YAA/B;AAA6C,YAAA,OAAO,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjEF,eAmEE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAExB;AAApB;AAAA;AAAA;AAAA;AAAA,kBAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AANL;AAAA;AAAA;AAAA;AAAA,UAFF;AA2FD,CA/LD;;GAAMN,Y;UACgB1C,a;;;KADhB0C,Y;AAiMN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useRouteMatch , Redirect} from \"react-router-dom\";\nimport { Container, Row, Col, Card, Form, Button, Image, Spinner, Alert, Modal } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from 'firebase';\n\nimport {Feedback} from '../../Components/Feedback/index.js'\n\n\n//Variáveis do formulário\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false,\n    bio: false,\n    avatar: false\n  }\n};\n\n//Estado inicial do feedback do usuário\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: '' \n};\n\n//Esquema para validações no validate.js\nconst schema = {\n  name: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { maximum: 150, message: () => 'Este campo deve ter no máximo 150 caracteres' }\n  },\n  email: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n  },\n  password: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' }\n  },\n  passwordConfirmation: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' },\n    equality: { attribute: 'password', message: 'As senhas não são iguais!', comparator: (v1, v2) => (v1 === v2) }\n  },\n  bio: {\n    length: { maximum: 700, message: () => 'Este campo deve ter no máximo 700 caracteres' }\n  }      \n};\n\nconst EditUserForm = () => {\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n\n\n\n  //console.log(formState.values);\n\n  const queryUserByID = () => {\n    //Consultando usuário com ID passado na URL\n    if(formState.loading) return (\n\n      firebase.database().ref('Users').child(`${id}`).once('value', (snapshot) => {\n        setFormState(formState => ({\n          ...formState,\n          loading: false,\n          values: {\n            ...formState.values,\n            name: snapshot.val().name,\n            email: snapshot.val().email,\n            bio: snapshot.val().bio ? snapshot.val().bio : '',\n            password: snapshot.val().password,\n            avatar: snapshot.val().avatar ? snapshot.val().avatar : '' \n          },\n          touched: {          \n            ...formState.touched,\n            name: true,\n            email: true,\n            password: true,\n            bio: snapshot.val().bio ? true : false,\n            avatar: snapshot.val().avatar ? true : false          \n          }\n        }))\n      })\n    ) \n  }\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n  });  \n\n  useEffect(() => {\n    const errors = validate(formState.values, schema, { fullMessages: false });\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false: true,\n      errors: errors ? errors : {}\n    }))\n\n    console.log(formState.errors);\n    console.log(formState.isValid);\n  }, [formState.values]);\n  \n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      },\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });    \n  };\n\n  const handleAvatarChange = (e) => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  }\n\n  const handleFeedback = () =>{ setFeedback({...feedback, open: !(feedback.open)})};\n\n  const handleRedirect = () => {return (<Redirect to=\"/\"/>)};\n \n  const handleSubmit = (e) => {\n    if(formState.isValid){\n      firebase.database().ref('Users').child(`${id}`).set(formState.values);\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Sucesso! Edição realizada com sucesso.\"\n      })\n    }else{\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Erro! Edição não concluída.\"\n      })\n    }    \n    e.preventDefault();\n  };\n\n  return (\n    \n    <Container style={{padding:10}}>\n      {\n        formState.loading ? \n        (<Row style={{marginTop:250}} className=\"justify-content-center\" float=\"center\">\n              <Spinner  animation=\"border\" variant=\"warning\" size=\"xs\" role=\"status\"/>\n          </Row>) : \n        (<Card>\n          <Card.Header  className=\"bg-dark text-white\" border=\"warning\" as=\"h4\">Editar</Card.Header>\n          \n          <Card.Body>\n              <Card.Title as=\"h4\">Editar perfil</Card.Title>\n            <br/>\n            <Form>\n              <Form.Group controlId=\"formBasicAvatar\">\n                <Image\n                  width={100}\n                  height={100}\n                  alt=\"171x180\"\n                  src=\"https://elaele.com.br/img/anonimo.png\"\n                  roundedCircle\n                />   \n                <br/><br/>\n                <Form.Label>Avatar Personalizado</Form.Label>\n                  <Form.File \n                    id=\"inputGroupFile01\"\n                    label={fileName}\n                    value={formState.values.avatar}\n                    data-browse=\"Insira uma imagem\"\n                    onChange={(e) => handleAvatarChange(e)}\n                    custom                \n                  />\n                  \n                  <Form.Text className=\"text-muted\">\n                    Formatos válidos: PNG, JPEG, JPG.\n                  </Form.Text>\n              </Form.Group>   \n  \n              <Form.Group controlId=\"formBasicBio\">\n                <Form.Label>Descrição do seu perfil</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"Descrição\" \n                  value={formState.values.bio}\n                  onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n                />\n              </Form.Group>\n              \n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Nome</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"Nome Sobrenome\"             \n                  value={formState.values.name}\n                  onChange={e => handleFieldChange(e, 'name', e.target.value)}\n              />\n              </Form.Group>\n  \n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Senha Atual</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  placeholder=\"Senha\" \n                  value={formState.values.password}\n                  onChange={e => handleFieldChange(e, 'password', e.target.value)}\n                />\n              </Form.Group>\n  \n              <Form.Group controlId=\"formBasicPasswordConfirmation\">\n                <Form.Label>Nova Senha</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  placeholder=\"Confirme sua senha\" \n                  value={formState.values.passwordConfirmation}\n                  onChange={e => handleFieldChange(e, 'passwordConfirmation', e.target.value)}\n                />\n              </Form.Group>\n  \n              <Button type=\"submit\" onClick={handleSubmit} variant=\"primary\">Atualizar</Button>\n              \n              <Feedback feedback={feedback}/>\n              \n  \n            </Form>\n          </Card.Body>\n        </Card>)\n      }   \n      \n    </Container>\n  );\n}\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}