{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Form, Button, Image } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from 'firebase';\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false,\n    bio: false,\n    avatar: false\n  }\n};\n/*\n  const schema = {\n    name: {\n      presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n      length: { maximum: 150, message: () => 'Este campo deve ter no máximo 150 caracteres' }\n    },\n    email: {\n      presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    },\n    password: {\n      presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n      length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' }\n    },\n    bio: {\n      length: { maximum: 700, message: () => 'Este campo deve ter no máximo 700 caracteres' }\n    }      \n  };\n*/\n\nconst schema = {\n  name: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      maximum: 150,\n      message: () => 'Este campo deve ter no máximo 150 caracteres'\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: () => 'Este campo é obrigatório'\n    },\n    length: {\n      minimum: 8,\n      message: () => 'Este campo deve ter no mínimo 8 caracteres'\n    }\n  },\n  bio: {\n    length: {\n      maximum: 700,\n      message: () => 'Este campo deve ter no máximo 700 caracteres'\n    }\n  }\n};\n\nconst EditUserForm = () => {\n  _s();\n\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const database = firebase.database();\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [formState, setFormState] = useState(initialFormState);\n  console.log(formState.values);\n\n  const queryUserByID = () => {\n    //Consultando usuário com ID passado na URL\n    if (formState.loading) return firebase.database().ref('Users').child(`${id}`).once('value', snapshot => {\n      setFormState(formState => ({ ...formState,\n        loading: false,\n        values: { ...formState.values,\n          name: snapshot.val().name,\n          bio: snapshot.val().bio ? snapshot.val().bio : '',\n          password: snapshot.val().password,\n          avatar: snapshot.val().avatar ? snapshot.val().avatar : ''\n        },\n        touched: { ...formState.touched,\n          name: true,\n          password: true,\n          bio: snapshot.val().bio ? true : false,\n          avatar: snapshot.val().avatar ? true : false\n        }\n      }));\n    });\n  };\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n  });\n  useEffect(() => {\n    const errors = validate(formState.values, schema, {\n      fullMessages: false\n    });\n    setFormState(formState => ({ ...formState,\n      isValid: !errors,\n      errors: errors ? errors : {}\n    }));\n    console.log(formState.errors);\n  }, [formState.values]);\n\n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({ ...formState,\n      values: { ...formState.values,\n        [field]: value\n      },\n      touched: { ...formState.touched,\n        [field]: true\n      }\n    });\n  };\n\n  const handleAvatarChange = e => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-dark text-white\",\n        border: \"warning\",\n        as: \"h4\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicAvatar\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Avatar Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              width: 100,\n              height: 100,\n              alt: \"171x180\",\n              src: \"https://elaele.com.br/img/anonimo.png\",\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"inputGroupFile01\",\n              label: fileName,\n              value: formState.values.avatar,\n              \"data-browse\": \"Insira uma imagem\",\n              onChange: e => handleAvatarChange(e),\n              custom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Formatos v\\xE1lidos: PNG, JPEG, JPG.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicBio\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Descri\\xE7\\xE3o do seu perfil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Descri\\xE7\\xE3o\",\n              value: formState.values.bio,\n              onChange: e => handleFieldChange(e, 'bio', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Nome Sobrenome\",\n              value: formState.values.name,\n              onChange: e => handleFieldChange(e, 'name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha Atual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: formState.values.password,\n              onChange: e => handleFieldChange(e, 'password', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPasswordConfirmation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nova Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirme sua senha\",\n              value: formState.values.passwordConfirmation,\n              onChange: e => handleFieldChange(e, 'passwordConfirmation', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUserForm, \"puiAvrNZjan8y+lVpw02pL8xmU4=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = EditUserForm;\nexport default EditUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserForm\");","map":{"version":3,"sources":["/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js"],"names":["React","useState","useEffect","useRouteMatch","Container","Row","Col","Card","Form","Button","Image","validate","firebase","initialFormState","isValid","loading","values","name","email","password","passwordConfirmation","bio","avatar","errors","touched","schema","presence","allowEmpty","message","length","maximum","minimum","EditUserForm","routerMatch","id","params","database","fileName","setFileName","formState","setFormState","console","log","queryUserByID","ref","child","once","snapshot","val","fullMessages","handleFieldChange","e","field","value","persist","handleAvatarChange","target","files"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Form, Button, Image } from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from 'firebase';\n\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    bio: '',\n    avatar: ''\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirmation: false,\n    bio: false,\n    avatar: false\n  }\n}\n/*\n  const schema = {\n    name: {\n      presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n      length: { maximum: 150, message: () => 'Este campo deve ter no máximo 150 caracteres' }\n    },\n    email: {\n      presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    },\n    password: {\n      presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n      length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' }\n    },\n    bio: {\n      length: { maximum: 700, message: () => 'Este campo deve ter no máximo 700 caracteres' }\n    }      \n  };\n*/\n\nconst schema = {\n  name: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { maximum: 150, message: () => 'Este campo deve ter no máximo 150 caracteres' }\n  },\n  password: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { minimum: 8, message: () => 'Este campo deve ter no mínimo 8 caracteres' }\n  },\n  bio: {\n    length: { maximum: 700, message: () => 'Este campo deve ter no máximo 700 caracteres' }\n  }      \n};\n\nconst EditUserForm = () => {\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const database = firebase.database();\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [formState, setFormState] = useState(initialFormState);\n\n\n  console.log(formState.values);\n\n  const queryUserByID = () => {\n    //Consultando usuário com ID passado na URL\n    if(formState.loading) return (\n\n      firebase.database().ref('Users').child(`${id}`).once('value', (snapshot) => {\n        setFormState(formState => ({\n          ...formState,\n          loading: false,\n          values: {\n            ...formState.values,\n            name: snapshot.val().name,\n            bio: snapshot.val().bio ? snapshot.val().bio : '',\n            password: snapshot.val().password,\n            avatar: snapshot.val().avatar ? snapshot.val().avatar : '' \n          },\n          touched: {          \n            ...formState.touched,\n            name: true,\n            password: true,\n            bio: snapshot.val().bio ? true : false,\n            avatar: snapshot.val().avatar ? true : false          \n          }\n        }))\n      })\n    ) \n  }\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n  });  \n\n  useEffect(() => {\n    const errors = validate(formState.values, schema, { fullMessages: false });\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: !errors,\n      errors: errors ? errors : {}\n    }))\n\n    console.log(formState.errors);\n  }, [formState.values]);\n  \n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      },\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });\n\n    \n  };\n\n  const handleAvatarChange = (e) => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  }\n\n  return (\n    <Container>\n      \n      <Card>\n        <Card.Header  className=\"bg-dark text-white\" border=\"warning\" as=\"h4\">Editar</Card.Header>\n        <Card.Body>\n\n          <Form>\n            <Form.Group controlId=\"formBasicAvatar\">\n              \n              <Form.Label>Avatar Personalizado</Form.Label>\n                <br/>                   \n\n                <Image\n                  width={100}\n                  height={100}\n                  alt=\"171x180\"\n                  src=\"https://elaele.com.br/img/anonimo.png\"\n                  roundedCircle\n                />                          \n              \n                <Form.File \n                  id=\"inputGroupFile01\"\n                  label={fileName}\n                  value={formState.values.avatar}\n                  data-browse=\"Insira uma imagem\"\n                  onChange={(e) => handleAvatarChange(e)}\n                  custom                \n                />\n                \n                <Form.Text className=\"text-muted\">\n                  Formatos válidos: PNG, JPEG, JPG.\n                </Form.Text>\n            </Form.Group>   \n\n            <Form.Group controlId=\"formBasicBio\">\n              <Form.Label>Descrição do seu perfil</Form.Label>\n              <Form.Control \n                type=\"text\" \n                placeholder=\"Descrição\" \n                value={formState.values.bio}\n                onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Nome</Form.Label>\n              <Form.Control \n                type=\"text\" \n                placeholder=\"Nome Sobrenome\"             \n                value={formState.values.name}\n                onChange={e => handleFieldChange(e, 'name', e.target.value)}\n             />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Senha Atual</Form.Label>\n              <Form.Control \n                type=\"password\" \n                placeholder=\"Senha\" \n                value={formState.values.password}\n                onChange={e => handleFieldChange(e, 'password', e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPasswordConfirmation\">\n              <Form.Label>Nova Senha</Form.Label>\n              <Form.Control \n                type=\"password\" \n                placeholder=\"Confirme sua senha\" \n                value={formState.values.passwordConfirmation}\n                onChange={e => handleFieldChange(e, 'passwordConfirmation', e.target.value)}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Atualizar\n            </Button>\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default EditUserForm;\n"]},"metadata":{},"sourceType":"module"}