[{"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/index.js":"1","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/App.js":"2","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/routes.js":"3","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Error/index.js":"4","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Home/index.js":"5","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Login/index.js":"6","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Header/index.js":"7","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/CreateUserForm/index.js":"8","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js":"9"},{"size":483,"mtime":1607390441568,"results":"10","hashOfConfig":"11"},{"size":693,"mtime":1607698847666,"results":"12","hashOfConfig":"11"},{"size":898,"mtime":1607699946976,"results":"13","hashOfConfig":"11"},{"size":272,"mtime":1607699961232,"results":"14","hashOfConfig":"11"},{"size":141,"mtime":1607698847826,"results":"15","hashOfConfig":"11"},{"size":890,"mtime":1607698847826,"results":"16","hashOfConfig":"11"},{"size":186,"mtime":1607698847826,"results":"17","hashOfConfig":"11"},{"size":8455,"mtime":1607699963636,"results":"18","hashOfConfig":"11"},{"size":5310,"mtime":1607698847826,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1kiazx3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/index.js",[],["42","43"],"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/App.js",[],"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/routes.js",[],"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Error/index.js",[],"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Home/index.js",["44","45","46"],"import React from 'react';\n\nconst Home = () => {\n    return (\n      <div>\n        <h1> Home</h1>\n      </div>\n    );\n}\n\nexport default Home;\n","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Login/index.js",["47","48","49","50","51"],"import React, {useState} from 'react';\nimport { Container, Row, Card, Form, Button } from 'react-bootstrap';\n\nconst Login = () => {\n  return (\n    <Container>\n\n      <Card bg=\"dark\" text=\"white\">\n        <Card.Header border=\"warning\" as=\"h4\">Login</Card.Header>\n        <Card.Body>\n          <Form>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Insira seu email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Senha</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Senha\" />\n            </Form.Group>\n\n            <Button variant=\"warning\" type=\"submit\">\n              Entrar\n            </Button>\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Login;\n","/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/Header/index.js",[],"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/CreateUserForm/index.js",["52","53"],"/home/pedrohso7/Desktop/Trabalhos/WEB/Sistema/urClassPosts/urclassposts_frontend/src/views/EditUserForm/index.js",["54"],"import React, {useState, useEffect} from 'react';\nimport { useRouteMatch , Link } from \"react-router-dom\";\nimport { Container, Row, Card, Form, Button, Image, Spinner, Alert} from 'react-bootstrap';\nimport validate from 'validate.js';\nimport firebase from '../../firebaseConnection';\n\n\n//Variáveis do formulário\nconst initialFormState = {\n  isValid: false,\n  loading: true,\n  values: {\n    name: '',\n    email: '',\n    password: '',\n    bio: '',\n    avatar: ''\n  },\n  errors: {\n    name: [],\n    email: [],\n    password: [],\n    bio: [],\n    avatar: []\n  },\n  touched: {\n    name: false,\n    email: false,\n    password: false,\n    bio: false,\n    avatar: false\n  }\n};\n\n//Estado inicial do feedback do usuário\nconst initialFeedback = {\n  open: false,\n  message: '',\n  type: '' \n};\n\n//Esquema para validações no validate.js\nconst schema = {\n  name: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    length: { maximum: 150, message: () => 'Este campo deve ter no máximo 150 caracteres' }\n  },\n  email: {\n    presence: { allowEmpty: false, message: () => 'Este campo é obrigatório' },\n    email: { message: () => 'Insira um email válido' }\n  },\n  bio: {\n    length: { maximum: 700, message: () => 'Este campo deve ter no máximo 700 caracteres' }\n  }      \n};\n\n\n\nconst EditUserForm = () => {\n  const routerMatch = useRouteMatch(\"/user/edit/:id\");\n  const id = routerMatch.params.id;\n  const [fileName, setFileName] = useState(\"Insira um arquivo válido\");\n  const [feedback, setFeedback] = useState(initialFeedback);\n  const [formState, setFormState] = useState(initialFormState);\n\n\n\n  //console.log(formState.values);\n\n  const queryUserByID = () => {\n    //Consultando usuário com ID passado na URL\n    if(formState.loading) {\n      firebase.database().ref('User').child(`${id}`).once('value', (snapshot) => {\n        setFormState(formState => ({\n          ...formState,\n          loading: false,\n          values: {\n            ...formState.values,\n            name: snapshot.val().name,\n            email: firebase.auth().currentUser.email,\n            bio: snapshot.val().bio ? snapshot.val().bio : '',\n            password: firebase.auth().currentUser.password,\n            avatar: snapshot.val().avatar ? snapshot.val().avatar : '' \n          },\n          touched: {          \n            ...formState.touched,\n            name: true,\n            email: true,\n            password: true,\n            bio: snapshot.val().bio ? true : false,\n            avatar: snapshot.val().avatar ? true : false          \n          }\n        }));\n      })\n    } \n  }\n\n  useEffect(() => {\n    //Buscando usuário\n    queryUserByID();\n    console.log(formState.values);\n  });  \n\n  useEffect(() => {\n    //Verificando campos do formulário a cada atualização do formulário\n    const errors = validate(formState.values, schema, { fullMessages: false });\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false: true,\n      errors: errors ? errors : {}\n    })) \n    \n  }, [formState.values]);\n  \n  const handleFieldChange = (e, field, value) => {\n    e.persist && e.persist();\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [field]: value\n      },\n      touched: {\n        ...formState.touched,\n        [field]: true\n      }\n    });    \n  };\n\n  const handleAvatarChange = (e) => {\n    setFileName(e.target.files[0].name);\n    handleFieldChange(e, 'avatar', e.target.value);\n  }\n\n  const hasError = (field) => Boolean(formState.errors[field] && formState.touched[field]);\n\n  const handleSubmit = (e) => {\n    if(formState.isValid){\n      // Atualizando campos no banco\n      firebase.database().ref('User').child(`${id}`).set({\n        name: formState.values.name,\n        bio: formState.touched.bio  ?  formState.values.bio : null,\n        avatar: formState.touched.avatar  ?  formState.values.avatar : null,\n      });\n      setFeedback({\n        open: true,\n        type: 'success',\n        message: \"Edição realizada com sucesso.\"\n      })\n    }else{\n      setFeedback({\n        open: true,\n        type: 'danger',\n        message: \"Edição não concluída.\"\n      })\n    }    \n    e.preventDefault();\n  };\n\n  return (    \n    <Container style={{padding:10}}>\n      {\n        formState.loading ? \n        (<Row style={{marginTop:250}} className=\"justify-content-center\" float=\"center\">\n              <Spinner  animation=\"border\" variant=\"warning\" size=\"xs\" role=\"status\"/>\n          </Row>) : \n        (<Card>\n          <Card.Header  className=\"bg-dark text-white\" border=\"warning\" as=\"h4\">Editar</Card.Header>\n          \n          <Card.Body>\n            <Card.Title as=\"h4\">Editar perfil</Card.Title>\n            <br/>\n            <Form noValidate>\n              <Form.Group controlId=\"formBasicAvatar\">\n                <Image\n                  width={100}\n                  height={100}\n                  alt=\"171x180\"\n                  src=\"https://elaele.com.br/img/anonimo.png\"\n                  roundedCircle\n                />   \n                <br/><br/>\n                <Form.Label>Avatar Personalizado</Form.Label>\n                  <Form.File \n                    id=\"inputGroupFile01\"\n                    label={fileName}\n                    value={formState.values.avatar}\n                    data-browse=\"Insira uma imagem\"\n                    onChange={(e) => handleAvatarChange(e)}\n                    custom                \n                  />\n                  \n                  <Form.Text className=\"text-muted\">\n                    Formatos válidos: PNG, JPEG, JPG.\n                  </Form.Text>\n\n                  {/* Mensagem de erro, caso exista */}\n                  {/*<p className=\"text-danger\">{hasError('bio') ? formState.errors.bio[0] : null}</p>*/}\n              </Form.Group>   \n  \n              <Form.Group controlId=\"formBasicBio\">\n                <Form.Label>Descrição do seu perfil</Form.Label>\n                <Form.Control \n                  as=\"textarea\"\n                  type=\"text\"\n                  isInvalid={hasError('bio') ? true : false}\n                  placeholder=\"Descrição\" \n                  value={formState.values.bio}\n                  onChange={e => handleFieldChange(e, 'bio', e.target.value)}\n                />                \n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-danger\">\n                  {hasError('bio') ? formState.errors.bio[0] : null}\n                </Form.Text>                  \n                \n              </Form.Group>\n              \n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Nome</Form.Label>\n                <Form.Control \n                  isInvalid={hasError('name') ? true : false}\n                  type=\"text\" \n                  placeholder=\"Nome Sobrenome\"             \n                  value={formState.values.name}\n                  onChange={e => handleFieldChange(e, 'name', e.target.value)}\n              />\n                {/* Mensagem de erro, caso exista */}\n                <Form.Text className=\"text-danger\">\n                  {hasError('name') ? formState.errors.name[0] : null}\n                </Form.Text>\n                \n              </Form.Group>\n\n              {/* Botao Submit e feedback para o usuário utilizando o controlador \"feedback.open\"*/}\n              {feedback.open ? (\n                <Alert variant={feedback.type} onClose={() => setFeedback({...feedback, open: false})} dismissible>\n                  <Alert.Heading>{(feedback.type == 'success') ? ('Sucesso!') : ('Erro!')}</Alert.Heading>\n                  <p>{feedback.message}</p>\n                  <Link to={'/'}>Retornar a página inicial</Link>\n                </Alert>\n              ) :\n                <Button type=\"submit\" onClick={(e) => handleSubmit(e)} variant=\"primary\">Atualizar</Button>\n              }\n            </Form>\n          </Card.Body>\n        </Card>)\n      }      \n    </Container>\n  );\n}\n\nexport default EditUserForm;\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":20,"nodeType":"61","messageId":"62","endLine":2,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":2,"column":28,"nodeType":"61","messageId":"62","endLine":2,"endColumn":31},{"ruleId":"59","severity":1,"message":"64","line":2,"column":33,"nodeType":"61","messageId":"62","endLine":2,"endColumn":38},{"ruleId":"59","severity":1,"message":"65","line":2,"column":17,"nodeType":"61","messageId":"62","endLine":2,"endColumn":25},{"ruleId":"59","severity":1,"message":"64","line":3,"column":46,"nodeType":"61","messageId":"62","endLine":3,"endColumn":51},{"ruleId":"59","severity":1,"message":"66","line":52,"column":10,"nodeType":"61","messageId":"62","endLine":52,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":186,"column":50,"nodeType":"69","messageId":"70","endLine":186,"endColumn":52},{"ruleId":"67","severity":1,"message":"68","line":188,"column":35,"nodeType":"69","messageId":"70","endLine":188,"endColumn":37},{"ruleId":"59","severity":1,"message":"64","line":4,"column":46,"nodeType":"61","messageId":"62","endLine":4,"endColumn":51},{"ruleId":"67","severity":1,"message":"68","line":249,"column":50,"nodeType":"69","messageId":"70","endLine":249,"endColumn":52},{"ruleId":"67","severity":1,"message":"68","line":238,"column":50,"nodeType":"69","messageId":"70","endLine":238,"endColumn":52},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Image' is defined but never used.","'Redirect' is defined but never used.","'redirect' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]